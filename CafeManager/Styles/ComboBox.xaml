<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:CafeManager.WPF.Services.Converter"
    xmlns:ma="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.AeroLite">
    <converter:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />
    <LinearGradientBrush x:Key="ComboBox.Static.Background" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="#FFF0F0F0" />
        <GradientStop Offset="1.0" Color="#FFE5E5E5" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC" />
    <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent" />
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="#FFECF4FC" />
        <GradientStop Offset="1.0" Color="#FFDCECFC" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA" />
    <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000" />
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA" />
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="#FFEBF4FC" />
        <GradientStop Offset="1.0" Color="#FFDCECFC" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA" />
    <LinearGradientBrush x:Key="ComboBox.Pressed.Background" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="#FFDAECFC" />
        <GradientStop Offset="1.0" Color="#FFC4E0FC" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5" />
    <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000" />
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5" />
    <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="#FFDAEBFC" />
        <GradientStop Offset="1.0" Color="#FFC4E0FC" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent" />

    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">

        <Setter Property="Foreground" Value="#99703a" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="templateRoot"
                        Background="{TemplateBinding Background}"
                        BorderBrush="Transparent"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0 5 5 0"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            Margin="3"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="#844418" />
                        </Trigger>
                        <!--<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                            </MultiDataTrigger.Conditions>

                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="#9e7555" />
                        </MultiDataTrigger>-->

                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="#844418" />
                        </Trigger>
                        <!--<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                            </MultiDataTrigger.Conditions>

                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="#9e7555" />
                        </MultiDataTrigger>-->

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#844418" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter Property="Foreground" Value="#844418" />
                        </Trigger>
                        <!--<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                            </MultiDataTrigger.Conditions>

                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="#9e7555" />
                        </MultiDataTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  basic control template  -->
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Border
            x:Name="templateRoot"
            Background="#d5b096"
            BorderThickness="2"
            CornerRadius="5">
            <Grid SnapsToDevicePixels="true">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                </Grid.ColumnDefinitions>

                <TextBlock
                    x:Name="placeHolderTextBlock"
                    Grid.Column="0"
                    Margin="14,0,10,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Panel.ZIndex="1"
                    FontSize="12"
                    FontWeight="{TemplateBinding FontWeight}"
                    Foreground="#99703a"
                    Text="{Binding SelectedValue, RelativeSource={RelativeSource TemplatedParent}}"
                    TextTrimming="CharacterEllipsis"
                    Visibility="Collapsed" />

                <Button
                    Name="ClearButton"
                    Grid.Column="1"
                    Width="20"
                    Height="20"
                    Margin="0,0,3,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Panel.ZIndex="2"
                    Command="{Binding DataContext.ClearComboBoxCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                    CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                    Style="{StaticResource datePickerButton}"
                    Visibility="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource StringToVisibilityConverter}}">
                    <ma:PackIconMaterial
                        Width="15"
                        Height="15"
                        Kind="CloseBox" />
                </Button>

                <Popup
                    x:Name="comboBoxStyle"
                    Grid.ColumnSpan="3"
                    Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                    Margin="1"
                    AllowsTransparency="true"
                    HorizontalOffset="0"
                    IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    Placement="Bottom"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                    VerticalOffset="0">

                    <Border
                        x:Name="dropDownBorder"
                        Background="#d5b096"
                        BorderBrush="Transparent"
                        BorderThickness="2"
                        CornerRadius="5">

                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">

                            <ScrollViewer
                                MaxHeight="350"
                                HorizontalScrollBarVisibility="Disabled"
                                VerticalScrollBarVisibility="Auto">
                                <ItemsPresenter
                                    x:Name="ItemsPresenter"
                                    Margin="0,1"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Grid>
                    </Border>
                </Popup>

                <ToggleButton
                    x:Name="toggleButton"
                    Grid.ColumnSpan="3"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    Style="{StaticResource ComboBoxToggleButton}">
                    <ma:PackIconMaterial
                        Width="15"
                        Height="15"
                        Kind="ArrowDownDropCircleOutline" />
                </ToggleButton>

                <ContentPresenter
                    x:Name="ContentPresenter"
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Content="{TemplateBinding SelectionBoxItem}"
                    ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                    IsHitTestVisible="false"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger SourceName="ContentPresenter" Property="Content" Value="{x:Null}">
                <Setter TargetName="ClearButton" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger SourceName="ContentPresenter" Property="Content" Value="">
                <Setter TargetName="ClearButton" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="ClearButton" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="SelectedIndex" Value="-1">
                <Setter TargetName="placeHolderTextBlock" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="#9e7555" />
            </Trigger>

            <Trigger Property="IsDropDownOpen" Value="true">
                <Setter TargetName="dropDownBorder" Property="BorderBrush" Value="#9e7555" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="#d5b096" />
        <Setter Property="BorderBrush" Value="#9e7555" />
        <Setter Property="Foreground" Value="#844418" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="0,10" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
    </Style>
    <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="Background" Value="#d5b096" />
        <Setter Property="Padding" Value="14,0,0,0" />

        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="#844418" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border
                        x:Name="Background"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">

                            <Setter TargetName="Background" Property="Background" Value="#b79c8b" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">

                            <Setter TargetName="Background" Property="Background" Value="#b79c8b" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>